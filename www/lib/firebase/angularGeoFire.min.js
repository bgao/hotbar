(function(){"use strict";var a;angular.module("angularGeoFire",[]).factory("$geofire",["$q","$timeout","$rootScope","$log",function(b,c,d,e){return function(f){e.info("Constructing $geofire");var g=new a(b,c,d,f);return g.construct()}}]),a=function(a,b,c,d){if(this._q=a,this._rootScope=c,this._timeout=b,"string"==typeof d)throw new Error("Please provide a Firebase reference instead of a URL");this._geoRef=d,this._geoFire=new GeoFire(this._geoRef),this._onPointsNearLocCallbacks=[],this._onPointsNearId=[]},a.prototype={construct:function(){var a=this,b={};return b.$set=function(b,c){var d=a._q.defer();return a._timeout(function(){a._geoFire.set(b,c).then(function(){d.resolve(null)}).catch(function(a){d.reject(a)})}),d.promise},b.$remove=function(b){var c=a._q.defer();return a._timeout(function(){a._geoFire.remove(b).then(function(){c.resolve(null)}).catch(function(a){c.reject(a)})}),c.promise},b.$get=function(b){var c=a._q.defer();return a._timeout(function(){a._geoFire.get(b).then(function(a){c.resolve(a)}).catch(function(a){c.reject(a)})}),c.promise},b.$query=function(b){var c=a._geoFire.query(b);return{center:function(){return c.center()},radius:function(){return c.radius()},updateCriteria:function(a){c.updateCriteria(a)},on:function(b,d){return c.on(b,function(b,c,e){a._rootScope.$broadcast(d,b,c,e)})},cancel:function(){c.cancel()}}},b.$distance=function(b,c){return a._geoFire.distance(b,c)},a._object=b,a._object}}}).call(this);